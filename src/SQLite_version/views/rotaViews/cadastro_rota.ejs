<div class="mb-4">
    <h2>Cadastrar Rota</h2>
    <p class="text-muted">Adicionar rota ao sistema</p>
</div>

<div class="card">
    <div class="card-body">
        <div id="message" class="alert" style="display:none;"></div>
        
        <form id="rotaForm">
            <div class="row g-3">
                <div class="col-md-6">
                    <label for="nome" class="form-label">Nome da Rota</label>
                    <input type="text" class="form-control" id="nome" name="nome" required>
                </div>

                <div class="col-md-6">
                    <label for="descricao" class="form-label">Descrição</label>
                    <input type="text" class="form-control" id="descricao" name="descricao" required>
                </div>

                <div class="col-md-6">
                    <label for="horario_inicio" class="form-label">Horário de Início</label>
                    <input type="time" class="form-control" id="horario_inicio" name="horario_inicio" required>
                </div>

                <div class="col-md-6">
                    <label for="horario_fim" class="form-label">Horário de Fim</label>
                    <input type="time" class="form-control" id="horario_fim" name="horario_fim" required>
                </div>

                <div class="col-md-6">
                    <label for="motorista_id" class="form-label">Motorista</label>
                    <select class="form-control" id="motorista_id" name="motorista_id" required>
                        <option value="">Selecione um motorista</option>
                        <!-- Opções preenchidas dinamicamente -->
                    </select>
                </div>

                <div class="col-md-6">
                    <label for="veiculo_id" class="form-label">Veículo</label>
                    <select class="form-control" id="veiculo_id" name="veiculo_id" required>
                        <option value="">Selecione um veículo</option>
                        <!-- Opções preenchidas dinamicamente -->
                    </select>
                </div>

                <div class="col-12">
                    <label for="pontos_parada" class="form-label">Pontos de Parada</label>
                    <textarea class="form-control" id="pontos_parada" name="pontos_parada" rows="3" placeholder="Ex: Escola Central, Mercado Municipal, Bairro da Paz" required></textarea>
                </div>
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">Cadastrar</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Carregar motoristas e veículos para os selects
    async function carregarOpcoes() {
        const token = localStorage.getItem('token');
        try {
            // Carregar motoristas
            const motoristasResponse = await fetch('/api/motoristas/list', {
				method: 'POST',
				headers: {
					'Authorization': `Bearer ${token}`
				}
			});
            if (!motoristasResponse.ok) throw new Error('Erro ao carregar motoristas');
            const motoristas = await motoristasResponse.json();
            const motoristaSelect = document.getElementById('motorista_id');
            motoristas.forEach(motorista => {
                const option = document.createElement('option');
                option.value = motorista.id;
                option.textContent = motorista.nome;
                motoristaSelect.appendChild(option);
            });

            // Carregar veículos
            // Carregar motoristas
            const veiculosResponse = await fetch('/api/veiculos/list', {
				method: 'POST',
				headers: {
					'Authorization': `Bearer ${token}`
				}
			});
            if (!veiculosResponse.ok) throw new Error('Erro ao carregar veículos');
            const veiculos = await veiculosResponse.json();
            const veiculoSelect = document.getElementById('veiculo_id');
            veiculos.forEach(veiculo => {
                const option = document.createElement('option');
                option.value = veiculo.id;
                option.textContent = `${veiculo.modelo} (${veiculo.matricula})`;
                veiculoSelect.appendChild(option);
            });
        } catch (err) {
            console.error('Erro ao carregar opções:', err);
            const messageDiv = document.getElementById('message');
            emitirMensagem(messageDiv, 'danger', 'Erro ao carregar motoristas ou veículos.');
        }
    }

    // Enviar formulário
    document.getElementById('rotaForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const token = localStorage.getItem('token');
        const data = {
            nome: document.getElementById('nome').value,
            descricao: document.getElementById('descricao').value,
            horario_inicio: document.getElementById('horario_inicio').value,
            horario_fim: document.getElementById('horario_fim').value,
            pontos_parada: document.getElementById('pontos_parada').value,
            motorista_id: parseInt(document.getElementById('motorista_id').value),
            veiculo_id: parseInt(document.getElementById('veiculo_id').value)
        };

        try {
            const response = await fetch('/api/rotas/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(data)
            });
            const result = await response.json();
            const messageDiv = document.getElementById('message');
            if (response.ok) {
                emitirMensagem(messageDiv, 'success', result.message || 'Rota cadastrada com sucesso!');
                document.getElementById('rotaForm').reset();
            } else {
                emitirMensagem(messageDiv, 'danger', result.error || 'Erro ao cadastrar a rota.');
            }
        } catch (err) {
            console.error('Erro:', err);
            const messageDiv = document.getElementById('message');
            emitirMensagem(messageDiv, 'danger', 'Erro na conexão com o servidor.');
        }
    });

    // Carregar opções ao carregar a página
    document.addEventListener('DOMContentLoaded', carregarOpcoes);
</script>
