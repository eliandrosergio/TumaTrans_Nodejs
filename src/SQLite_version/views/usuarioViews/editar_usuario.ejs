<div class="mb-4">
    <h2>Editar Usuário</h2>
    <p class="text-muted">Modificar dados do usuário</p>
</div>

<div class="card">
    <div class="card-body">
        <div id="message" class="alert" style="display:none;"></div>
        
        <form id="editarUsuarioForm">
            <input type="hidden" id="usuarioId">
            <div class="row g-3">
                <div class="col-md-6">
                    <label for="username" class="form-label">Nome de Usuário</label>
                    <input type="text" class="form-control" id="username" name="username" required>
                </div>

                <div class="col-md-6">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                </div>

                <div class="col-md-6">
                    <label for="password" class="form-label">Nova Senha</label>
                    <div class="input-group">
                        <input type="password" class="form-control" id="password" name="password">
                        <button type="button" id="togglePassword" class="btn btn-outline-secondary">
                            <i class="bi bi-eye"></i>
                        </button>
                    </div>
                    <small class="text-muted">Deixe em branco para não alterar</small>
                </div>

                <div class="col-md-6">
                    <label for="nivel" class="form-label">Nível de Acesso</label>
                    <select class="form-control" id="nivel" name="nivel" required>
                        <option value="admin">Administrador</option>
                        <option value="gerente">Gerente</option>
                        <option value="aluno">Aluno</option>
                        <option value="motorista">Motorista</option>
                    </select>
                </div>
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary me-2">Alterar</button>
                <button type="button" class="btn btn-outline-secondary" onclick="navigateWithToken(event, '/api/usuarios/ver')">Cancelar</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Toggle senha
    document.getElementById('togglePassword').addEventListener('click', () => {
        const passwordInput = document.getElementById('password');
        const toggleBtn = document.getElementById('togglePassword');
        const icon = toggleBtn.querySelector('i');
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.className = 'bi bi-eye-slash';
        } else {
            passwordInput.type = 'password';
            icon.className = 'bi bi-eye';
        }
    });

    document.addEventListener('DOMContentLoaded', async () => {
        const usuarioId = new URLSearchParams(window.location.search).get('id');
        if (!usuarioId) {
            alert('ID do usuário não informado');
            navigateWithToken(event, '/api/usuarios/ver');
            return;
        }
        
        const token = localStorage.getItem('token');
        
        try {
            const response = await fetch(`/api/usuarios/${usuarioId}`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            const usuario = await response.json();
            
            if (response.ok) {
                document.getElementById('usuarioId').value = usuario.id;
                document.getElementById('username').value = usuario.username;
                document.getElementById('email').value = usuario.email;
                document.getElementById('nivel').value = usuario.nivel;
            } else {
                emitirMensagem(document.getElementById('message'), 'danger', usuario.error);
            }
        } catch (err) {
            console.error('Erro:', err);
            emitirMensagem(document.getElementById('message'), 'danger', 'Erro ao carregar dados.');
        }
    });

    document.getElementById('editarUsuarioForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const data = {
            username: document.getElementById('username').value,
            email: document.getElementById('email').value,
            nivel: document.getElementById('nivel').value
        };

        const password = document.getElementById('password').value;
        if (password) {
            data.password = password;
        }

        mostrarModal('Confirmar Alteração', 'Tem certeza que deseja alterar os dados deste usuário?', async () => {
            const token = localStorage.getItem('token');
            const usuarioId = document.getElementById('usuarioId').value;
            
            try {
                const response = await fetch(`/api/usuarios/${usuarioId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify(data)
                });
                const result = await response.json();
                
                if (response.ok) {
                    emitirMensagem(document.getElementById('message'), 'success', result.message);
                    setTimeout(() => navigateWithToken(e, '/api/usuarios/ver'), 1500);
                } else {
                    emitirMensagem(document.getElementById('message'), 'danger', result.error);
                }
            } catch (err) {
                console.error('Erro:', err);
                emitirMensagem(document.getElementById('message'), 'danger', 'Erro na conexão.');
            }
        }, false);
    });
</script>
