<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/bootstrap-icons.css">
    <link rel="stylesheet" href="/css/index.css">k
</head>
<body>
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="bi bi-bus-front me-2"></i>Gestão de Transporte
            </a>
            <div class="navbar-nav ms-auto d-flex flex-row" id="navLinks">
                <a class="nav-link" href="#" id="painelControlLink" style="display: none;" onclick="navigateWithToken(event, '/nav/painelControl')">
                    Painel
                </a>
                <a class="nav-link" href="/nav/logout" id="logoutLink" style="display: none;">
                    Sair
                </a>
                <a class="nav-link" href="/nav/login" id="loginLink">
                    Entrar
                </a>
            </div>
        </div>
    </nav>
    
    <div style="padding-top: 70px;">
        <div class="container">
            <div class="main-content">
                <%- body %>
            </div>
        </div>
    </div>

    <script>
        // Emite uma mensagem em uma div com o seu tipo certo
        function emitirMensagem( messageDiv, tipo, msg, ocultar ) {
            messageDiv.className = `alert alert-${tipo}`;
            messageDiv.textContent = msg;
            if (ocultar) {
                messageDiv.style.display = 'none';
            } else {
                messageDiv.style.display = 'block';
            }
            setTimeout(() => messageDiv.style.display = 'none', 8000);
            return ;
        }

        // Verifica a existencia do token
        function verificarToken( token ) {
            if (!token) {
                alert('Por favor, faça login primeiro.');
                window.location.href = '/nav/login';
                return ;
            }
        }

        // Faz requisições get ao servidor usando o token
        function navigateWithToken( event, url ) {
            const token = localStorage.getItem('token');
            event.preventDefault();
            verificarToken(token);
            fetch(url, {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            })
            .then(response => {
                if (response.ok) {
                    return response.text();
                } else {
                    throw new Error('Erro ao acessar a página: ' + response.statusText);
                }
            })
            .then(html => {
                document.open();
                document.write(html);
                document.close();
                updateNav(); // Atualiza a navegação
            })
            .catch(err => {
                console.error('Erro:', err);
                alert('Erro ao navegar. Faça login novamente.');
                window.location.href = '/nav/login';
            });
        }

        function updateNav() {
            const token = localStorage.getItem('token');
            const painelControlLink = document.getElementById('painelControlLink');
            const logoutLink = document.getElementById('logoutLink');
            const loginLink = document.getElementById('loginLink');

            if (token) {
                painelControlLink.style.display = 'block';
                logoutLink.style.display = 'block';
                loginLink.style.display = 'none';
            } else {
                painelControlLink.style.display = 'none';
                logoutLink.style.display = 'none';
                loginLink.style.display = 'block';
            }
        }

        // Executa ao carregar e atualiza a navegação
        document.addEventListener('DOMContentLoaded', updateNav);
        window.addEventListener('storage', updateNav);
    </script>
</body>
</html>
