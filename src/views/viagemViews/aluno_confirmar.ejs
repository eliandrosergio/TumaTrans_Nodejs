<div class="mb-4">
    <h2>Confirmar Presença</h2>
    <p class="text-muted">Confirme sua entrada no veículo</p>
</div>

<div id="message" class="alert" style="display:none;"></div>

<!-- Viagem Disponível -->
<div id="viagemDisponivel" style="display:none;">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0"><i class="bi bi-bus-front"></i> Viagem Ativa</h5>
        </div>
        <div class="card-body">
            <div class="row mb-4">
                <div class="col-md-6">
                    <p class="mb-2"><strong>Rota:</strong> <span id="rotaNome"></span></p>
                    <p class="mb-2"><strong>Motorista:</strong> <span id="motoristaNome"></span></p>
                    <p class="mb-0"><strong>Sua Paragem:</strong> <span id="minhaParagem" class="badge bg-secondary"></span></p>
                </div>
                <div class="col-md-6">
                    <p class="mb-2"><strong>Horário Início:</strong> <span id="horarioInicio"></span></p>
                    <p class="mb-0"><strong>Veículo:</strong> <span id="veiculo"></span></p>
                </div>
            </div>
            
            <div id="statusPresenca" class="text-center p-4 border rounded bg-light">
                <!-- Conteúdo dinâmico -->
            </div>
        </div>
    </div>
    
    <!-- Informações Adicionais -->
    <div class="card mt-3">
        <div class="card-body">
            <h6 class="mb-3"><i class="bi bi-info-circle"></i> Instruções</h6>
            <ul class="mb-0">
                <li>Confirme sua presença assim que entrar no veículo</li>
                <li>Certifique-se de estar na paragem correta antes de confirmar</li>
                <li>Em caso de dúvidas, consulte o motorista</li>
            </ul>
        </div>
    </div>
</div>

<!-- Sem Viagem -->
<div id="semViagem" style="display:none;">
    <div class="card">
        <div class="card-body text-center p-5">
            <i class="bi bi-exclamation-circle text-info" style="font-size: 3rem;"></i>
            <h4 class="mt-3 mb-2">Nenhuma Viagem Ativa</h4>
            <p class="text-muted">Não há viagens ativas no momento para sua rota.</p>
            <button class="btn btn-outline-primary mt-2" onclick="location.reload()">
                <i class="bi bi-arrow-clockwise"></i> Atualizar
            </button>
        </div>
    </div>
</div>

<!-- Sem Rota Cadastrada -->
<div id="semRota" style="display:none;">
    <div class="card">
        <div class="card-body text-center p-5">
            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
            <h4 class="mt-3 mb-2">Rota Não Cadastrada</h4>
            <p class="text-muted">Você ainda não está vinculado a uma rota. Entre em contato com a administração.</p>
        </div>
    </div>
</div>

<script>
    let viagemAtualId = null;
    let minhaParagem = '';
    let alunoId = null;
    let presencaConfirmada = false;

    // Carrega viagem disponível para o aluno
    async function carregarViagemDisponivel() {
        const token = localStorage.getItem('token');
        try {
            // Buscar dados do aluno logado
            const alunoResponse = await fetch('/api/alunos/list', {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${token}` }
            });
            const alunos = await alunoResponse.json();
            const meusDados = alunos[0]; // Aluno logado
            
            if (!meusDados || !meusDados.rota_id) {
                document.getElementById('semRota').style.display = 'block';
                return;
            }
            
            alunoId = meusDados.id;
            minhaParagem = meusDados.paragem_embarque || 'Não definida';
            
            // Buscar viagens ativas
            const response = await fetch('/api/viagens/listar-ativas', {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${token}` }
            });
            const viagens = await response.json();
            
            if (viagens.length > 0) {
                const viagem = viagens[0];
                viagemAtualId = viagem.id;
                
                document.getElementById('rotaNome').textContent = viagem.rota.nome;
                document.getElementById('motoristaNome').textContent = viagem.motorista.nome;
                document.getElementById('minhaParagem').textContent = minhaParagem;
                document.getElementById('horarioInicio').textContent = viagem.horario_inicio;
                
                // Buscar informações do veículo
                const rotaResponse = await fetch('/api/rotas/list', {
                    method: 'POST',
                    headers: { 'Authorization': `Bearer ${token}` }
                });
                const rotas = await rotaResponse.json();
                const minhaRota = rotas.find(r => r.id === viagem.rota_id);
                
                if (minhaRota && minhaRota.veiculo) {
                    document.getElementById('veiculo').textContent = 
                        `${minhaRota.veiculo.modelo} (${minhaRota.veiculo.matricula})`;
                }
                
                // Verificar se já confirmou presença
                await verificarPresenca();
                
                document.getElementById('viagemDisponivel').style.display = 'block';
                document.getElementById('semViagem').style.display = 'none';
            } else {
                document.getElementById('viagemDisponivel').style.display = 'none';
                document.getElementById('semViagem').style.display = 'block';
            }
        } catch (err) {
            console.error(err);
            emitirMensagem(document.getElementById('message'), 'danger', 'Erro ao carregar informações.');
        }
    }

    // Verifica se o aluno já confirmou presença
    async function verificarPresenca() {
        const token = localStorage.getItem('token');
        try {
            const response = await fetch(`/api/viagens/verificar-presenca?viagem_id=${viagemAtualId}`, {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            const result = await response.json();
            
            if (result.existe) {
                if (result.confirmado_aluno) {
                    mostrarPresencaConfirmada(result.horario_entrada);
                } else if (result.confirmado_motorista) {
                    mostrarAguardandoConfirmacao(result.horario_entrada);
                } else {
                    mostrarBotaoConfirmar();
                }
            } else {
                mostrarAguardandoMotorista();
            }
        } catch (err) {
            console.error(err);
            mostrarBotaoConfirmar();
        }
    }

    // Mostra mensagem aguardando motorista
    function mostrarBotaoConfirmar() {
        const container = document.getElementById('statusPresenca');
        container.innerHTML = `
            <i class="bi bi-check-circle text-success mb-3" style="font-size: 3rem;"></i>
            <h5 class="mb-3">Confirme sua Presença</h5>
            <p class="text-muted mb-4">Clique no botão abaixo quando entrar no veículo</p>
            <button class="btn btn-success btn-lg" onclick="confirmarEntrada()">
                <i class="bi bi-check-circle-fill"></i> Confirmar que Entrei no Veículo
            </button>
        `;
    }

    // Mostra mensagem de presença confirmada
    function mostrarPresencaConfirmada(horario) {
        const container = document.getElementById('statusPresenca');
        container.innerHTML = `
            <i class="bi bi-check-circle-fill text-success mb-3" style="font-size: 3rem;"></i>
            <h5 class="mb-3 text-success">Presença Confirmada!</h5>
            <p class="text-muted mb-2">Confirmada às ${horario || 'agora'}</p>
            <p class="text-muted mb-2">Sua presença foi registrada com sucesso.</p>
            <small class="text-muted">Tenha uma boa viagem!</small>
        `;
    }

    // Mostra mensagem aguardando confirmação do motorista
    function mostrarAguardandoMotorista() {
        const container = document.getElementById('statusPresenca');
        container.innerHTML = `
            <i class="bi bi-clock text-warning mb-3" style="font-size: 3rem;"></i>
            <h5 class="mb-3">Aguardando Motorista</h5>
            <p class="text-muted mb-4">O motorista ainda não registrou sua presença nesta viagem.</p>
            <button class="btn btn-outline-primary" onclick="location.reload()">
                <i class="bi bi-arrow-clockwise"></i> Atualizar
            </button>
        `;
    }

    // Mostra mensagem aguardando confirmação do motorista
    function mostrarAguardandoConfirmacao(horario) {
        const container = document.getElementById('statusPresenca');
        container.innerHTML = `
            <i class="bi bi-check-circle text-info mb-3" style="font-size: 3rem;"></i>
            <h5 class="mb-3">Motorista Registrou sua Presença</h5>
            <p class="text-muted mb-2">Registrado às ${horario}</p>
            <p class="text-muted mb-4">Confirme que você realmente entrou no veículo</p>
            <button class="btn btn-success btn-lg" onclick="confirmarEntrada()">
                <i class="bi bi-check-circle-fill"></i> Sim, Eu Entrei no Veículo
            </button>
        `;
    }

    // Mostra mensagem aguardando confirmação do motorista
    async function confirmarEntrada() {
        const token = localStorage.getItem('token');
        
        // Confirmação antes de registrar
        mostrarModal(
            'Confirmar Presença', 
            `Você está confirmando sua entrada no veículo na paragem: ${minhaParagem}. Confirmar?`, 
            async () => {
                try {
                    const response = await fetch('/api/viagens/confirmar-entrada', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify({
                            viagem_id: viagemAtualId,
                            paragem: minhaParagem
                        })
                    });
                    const result = await response.json();
                    
                    if (response.ok) {
                        presencaConfirmada = true;
                        mostrarPresencaConfirmada();
                        emitirMensagem(document.getElementById('message'), 'success', 'Presença confirmada com sucesso!');
                    } else {
                        emitirMensagem(document.getElementById('message'), 'danger', result.error);
                    }
                } catch (err) {
                    console.error(err);
                    emitirMensagem(document.getElementById('message'), 'danger', 'Erro ao confirmar entrada.');
                }
            }, 
            false
        );
    }

    // Mostra mensagem aguardando confirmação do motorista
    document.addEventListener('DOMContentLoaded', carregarViagemDisponivel);

    // Auto-refresh a cada 15 segundos
    let intervalId = null;

    function iniciarAutoRefresh() {
        intervalId = setInterval(() => {
            if (viagemAtualId && !presencaConfirmada) {
                verificarPresenca();
            }
        }, 15000); // 15 segundos
    }

    function pararAutoRefresh() {
        if (intervalId) {
            clearInterval(intervalId);
            intervalId = null;
        }
    }

    // Iniciar auto-refresh quando carregar viagem
    const originalCarregar = carregarViagemDisponivel;
    carregarViagemDisponivel = async function() {
        await originalCarregar();
        if (viagemAtualId) {
            iniciarAutoRefresh();
        }
    }
</script>
